VERITY TO-DO
Things that need to be done or should be done:
 - Improve the quality of the PostScript output:
  - Make the dot in the (old) XOR symbol actually be centered
  - Lower the tops of the vertical bars & lower their bottoms
  - Lower the horizontal bars a bit?
  - Center the tables?
  - Adjust the spacing between symbols?
 - Handle PostScript tables that approach the bottom of the page (and ones that
   are too wide for the page?)
 - Properly document the nature of OLD_XOR_SYM somewhere prominently in the
   README
 - Amend the note on the XOR symbol in the manpage appropriately
 - Test out error recovery more (including checking for memory leaks)
 - If OLD_XOR_SYM is not defined, treat 'x' in input as a variable?
 - Deal with the overly long line output in the usage messages
 - Document the -u & -U options
  - Come up with a better way to describe them than as using "Unicode text"
 - Try to handle outputting of Unicode characters that don't exist in the
   current locale
 - Ignore (for syntactic purposes) invalid characters in input rather than
   exiting with an error
 - Support wide-character versions of the built-in operators in input

Ideas for possible new features:
 - Make commas valid statement delimiters
 - Allow multi-block files to alternate between braces-enclosed statements and
   unenclosed statements (maybe)
 - Add a "<-" operator
 - Implement a way for users to define their own boolean functions/operators
  - If a binary function is used between two variables without parentheses
    around any arguments, it is interpreted as a binary operator with left
    associativity (and this use should be honored in the output notation).
  - Possible example syntax: ``S(p, q) := p ^ -q''; ":=" and ':' should
    probably become alternate forms of each other (and be given the token name
    ``ASSIGN'' for error message purposes).
  - It should be possible to define functions outside of statement blocks,
    thereby making them available for all subsequent blocks.  (So functions
    inside blocks are scoped to the block?)
  - After implementing this, consider implementing "include" statements for
    including files containing predefined user functions.
  - Variables that are not parameters may be used inside function definitions,
    in which case they refer to variables with those names declared for the
    block (so be careful to avoid implementing dynamic scoping).
 - Implement non-standalone PostScript output
 - Implement embedded PostScript output
 - Implement *roff/tbl(1) output
 - Sort variables in the tables in alphabetical order
 - Allow identifier names to be arbitrarily long strings of non-whitespace,
   non-parenthesis characters (including wide characters)
 - Add a switch for disabling recognition of 'v' and 'x' as operators (or,
   alternatively, rewrite the grammar so that it transparently allows 'x's and
   'v's as either operators or variables)

$Commit: $Format:%H$$
$Date: $Format:%ai$$
$Author: $Format:%an$$
